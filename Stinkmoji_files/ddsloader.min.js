THREE.DDSLoader=function(){this._parser=THREE.DDSLoader.parse},THREE.DDSLoader.prototype=Object.create(THREE.CompressedTextureLoader.prototype),THREE.DDSLoader.prototype.constructor=THREE.DDSLoader,THREE.DDSLoader.parse=function(r,a){function e(r){return r.charCodeAt(0)+(r.charCodeAt(1)<<8)+(r.charCodeAt(2)<<16)+(r.charCodeAt(3)<<24)}function t(r){return String.fromCharCode(255&r,r>>8&255,r>>16&255,r>>24&255)}function o(r,a,e,t){for(var o=e*t*4,n=new Uint8Array(r,a,o),m=new Uint8Array(o),i=0,p=0,E=0;E<t;E++)for(var u=0;u<e;u++){var s=n[p];p++;var c=n[p];p++;var d=n[p];p++;var D=n[p];p++,m[i]=d,i++,m[i]=c,i++,m[i]=s,i++,m[i]=D,i++}return m}var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},m=542327876,i=131072,p=512,E=1024,u=2048,s=4096,c=8192,d=16384,D=32768,T=4,h=e("DXT1"),f=e("DXT3"),C=e("DXT5"),R=e("ETC1"),H=31,v=0,S=1,_=2,l=3,A=4,L=7,b=20,w=21,g=22,y=23,F=24,x=25,X=26,B=28,G=new Int32Array(r,0,H);if(G[v]!==m)return console.error("THREE.DDSLoader.parse: Invalid magic number in DDS header."),n;if(!G[b]&T)return console.error("THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code."),n;var M,U=G[w],k=!1;switch(U){case h:M=8,n.format=THREE.RGB_S3TC_DXT1_Format;break;case f:M=16,n.format=THREE.RGBA_S3TC_DXT3_Format;break;case C:M=16,n.format=THREE.RGBA_S3TC_DXT5_Format;break;case R:M=8,n.format=THREE.RGB_ETC1_Format;break;default:if(!(32===G[g]&&16711680&G[y]&&65280&G[F]&&255&G[x]&&4278190080&G[X]))return console.error("THREE.DDSLoader.parse: Unsupported FourCC code ",t(U)),n;k=!0,M=64,n.format=THREE.RGBAFormat}n.mipmapCount=1,G[_]&i&&a!==!1&&(n.mipmapCount=Math.max(1,G[L]));var I=G[B];if(n.isCubemap=!!(I&p),n.isCubemap&&(!(I&E)||!(I&u)||!(I&s)||!(I&c)||!(I&d)||!(I&D)))return console.error("THREE.DDSLoader.parse: Incomplete cubemap faces"),n;n.width=G[A],n.height=G[l];for(var j=G[S]+4,O=n.isCubemap?6:1,q=0;q<O;q++)for(var z=n.width,J=n.height,K=0;K<n.mipmapCount;K++){if(k)var N=o(r,j,z,J),P=N.length;else var P=Math.max(4,z)/4*Math.max(4,J)/4*M,N=new Uint8Array(r,j,P);var Q={data:N,width:z,height:J};n.mipmaps.push(Q),j+=P,z=Math.max(z>>1,1),J=Math.max(J>>1,1)}return n};